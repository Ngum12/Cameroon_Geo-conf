# Backend API Deployment for Project Sentinel
# Django REST Framework with GeoDjango and Celery support

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: sentinel-prod
  labels:
    app: backend-api
    component: api
    project: sentinel
    version: prod
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
        component: api
        project: sentinel
        version: prod
    spec:
      containers:
      - name: backend-api
        image: registry.cdf.cm/sentinel/backend:prod
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        # Database Configuration
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: host
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: password
        - name: DB_NAME
          value: "sentinel_db"
        - name: DB_USER
          value: "postgres"
        - name: DB_PORT
          value: "5432"
        
        # Django Configuration
        - name: DJANGO_SETTINGS_MODULE
          value: "sentinel_core.settings_production"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret
              key: secret-key
        - name: DEBUG
          value: "False"
        - name: ALLOWED_HOSTS
          value: "api.sentinel.cdf.cm,localhost,backend-api-service"
        
        # Redis Configuration (for Celery)
        - name: REDIS_HOST
          value: "redis-service.sentinel-prod.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        
        # NLP Services Configuration
        - name: TRANSLATION_SERVICE_URL
          value: "http://translation-service.sentinel-prod.svc.cluster.local:8000"
        - name: NER_SERVICE_URL
          value: "http://ner-service.sentinel-prod.svc.cluster.local:8000"
        
        # Application Configuration
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKERS
          value: "4"
        - name: MAX_REQUESTS
          value: "1000"
        - name: TIMEOUT
          value: "120"
        
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
            
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
            httpHeaders:
            - name: Host
              value: "api.sentinel.cdf.cm"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
            httpHeaders:
            - name: Host
              value: "api.sentinel.cdf.cm"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
          
        volumeMounts:
        - name: static-files
          mountPath: /app/staticfiles
        - name: media-files
          mountPath: /app/media
        - name: logs
          mountPath: /app/logs
        - name: tmp-volume
          mountPath: /tmp
          
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            
      # Init container for migrations
      initContainers:
      - name: migrate-database
        image: registry.cdf.cm/sentinel/backend:prod
        command: ['/bin/bash', '-c']
        args:
        - |
          echo "Waiting for database..."
          while ! nc -z $DB_HOST $DB_PORT; do sleep 1; done
          echo "Running database migrations..."
          python manage.py migrate --noinput
          echo "Creating superuser if not exists..."
          python manage.py shell -c "
          from django.contrib.auth import get_user_model;
          User = get_user_model();
          if not User.objects.filter(username='admin').exists():
              User.objects.create_superuser('admin', 'admin@sentinel.cdf.cm', 'SentinelAdmin2024!')
          "
          echo "Collecting static files..."
          python manage.py collectstatic --noinput --clear
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: host
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: password
        - name: DB_NAME
          value: "sentinel_db"
        - name: DB_USER
          value: "postgres"
        - name: DB_PORT
          value: "5432"
        - name: DJANGO_SETTINGS_MODULE
          value: "sentinel_core.settings_production"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret
              key: secret-key
        volumeMounts:
        - name: static-files
          mountPath: /app/staticfiles
          
      volumes:
      - name: static-files
        persistentVolumeClaim:
          claimName: backend-static-pvc
      - name: media-files
        persistentVolumeClaim:
          claimName: backend-media-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: backend-logs-pvc
      - name: tmp-volume
        emptyDir: {}
        
      imagePullSecrets:
      - name: registry-credentials
      
      # Node selection and tolerations
      nodeSelector:
        workload-type: api
      
      # Pod disruption budget reference
      # Ensures high availability during updates
      
---
apiVersion: v1
kind: Service
metadata:
  name: backend-api-service
  namespace: sentinel-prod
  labels:
    app: backend-api
    component: api
    project: sentinel
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: backend-api

---
# Persistent Volume Claims for Backend API
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-static-pvc
  namespace: sentinel-prod
  labels:
    app: backend-api
    component: api
    project: sentinel
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: shared-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-media-pvc
  namespace: sentinel-prod
  labels:
    app: backend-api
    component: api
    project: sentinel
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: shared-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-logs-pvc
  namespace: sentinel-prod
  labels:
    app: backend-api
    component: api
    project: sentinel
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: shared-storage

---
# Horizontal Pod Autoscaler for Backend API
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-api-hpa
  namespace: sentinel-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-api
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
